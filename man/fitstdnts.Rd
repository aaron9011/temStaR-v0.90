% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distNTS.R
\name{fitstdnts}
\alias{fitstdnts}
\title{fitstdnts}
\usage{
\code{fitstdnts(rawdat)}
\code{fitstdnts(rawdat), ksdensityflag = 1}
\code{fitstdnts(rawdat, initialparam = c(alpha, theta, beta))}
\code{fitstdnts(rawdat, initialparam = c(alpha, theta, beta)), ksdensityflag = 1}
\code{fitstdnts(rawdat, initialparam = c(alpha, theta, beta)), maxeval = 100, ksdensityflag = 1}
}
\arguments{
\item{rawdat}{Raw data to fit the parameters.}

\item{initialparam}{A vector of initial standard NTS parameters.
This function uses the \code{nloptr} package.
If it has a good initial parameter then estimation performs better.
If users do not know a good initial parameters, then just set it as \code{initialparam=NaN}, that is default.}

\item{maxeval}{Maximum evaluation number for \code{nloptr}. The iteration stops on this many function evaluations.}

\item{ksdensityflag}{This function fit the parameters using the curvefit method between the empirical cdf and the standard NTS cdf.
If \code{ksdensityflag = 1} (default), then the empirical cdf is calculated by the kernel density estimation.
If \code{ksdensityflag = 0}, then the empirical cdf is calculated by the empirical cdf.}
}
\value{
Estimated parameters
}
\description{
\code{fitstdnts} fit parameters \eqn{(\alpha, \theta, \beta)} of the standard NTS distribution.
This function using the curvefit method between the empirical cdf and the standard NTS cdf.
}
\examples{
library("temStaR")
library("quantmod")
getSymbols("^GSPC", src="yahoo", from = "2010-1-1", to = "2020-12-31")
pr <- as.numeric(GSPC$GSPC.Adjusted)
ret <- diff(log(pr))
stdret <- (ret-mean(ret))/sd(ret)
stdntsparam <-  fitstdnts(stdret)

Femp = ecdf(stdret)
x = seq(from=min(stdret), to = max(stdret), length.out = 100)
cemp = Femp(x)
ncdf = pnts(x, c(stdntsparam))
plot(x,ncdf,type = 'l', col = "red")
lines(x,cemp, type = 'l', col = "blue")
a = density(stdret)
p = dnts(x,stdntsparam)
plot(x,p,type = 'l', col = "red", ylim = c(0, max(a$y, p)))
lines(a,type = 'l', col = "blue")

}
\references{
Kim, Y. S. (2020) Portfolio Optimization on the Dispersion Risk and the Asymmetric Tail Risk
\url{https://arxiv.org/pdf/2007.13972.pdf}
}
