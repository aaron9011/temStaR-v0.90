% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distMultiNTS.R
\name{fitmnts}
\alias{fitmnts}
\title{fitmnts}
\usage{
\code{res <- fitmnts(returndata, n)}
\code{res <- fitmnts(returndata, n, alphaNtheta = c(alpha, theta))}
\code{res <- fitmnts(returndata, n, stdflag = TRUE ) }
\code{res <- fitmnts(returndata, n, alphaNtheta = c(alpha, theta), stdflag = TRUE)}
}
\arguments{
\item{returndata}{Raw data to fit the parameters.
The data must be given as a matrix form.
Each column of the matrix contains a sequence of asset returns.
The number of row of the matrix is the number of assets.}

\item{n}{Dimension of the data. That is the number of assets.}

\item{alphaNtheta}{If \eqn{\alpha} and \eqn{\theta} are given,
then put those numbers in this parameter.
The function fixes those parameters and fits other remaining parameters.
If you set \code{alphaNtheta = NULL},
then the function fits all parameters including \eqn{\alpha} and \eqn{\theta}.}

\item{stdflag}{If you want only standard NTS parameter fit, set this value be TRUE.}
}
\value{
Structure of parameters for the n-dimensional NTS distribution.

\code{res$mu} : \eqn{\mu} mean vector of the input data.

\code{res$sigma} : \eqn{\sigma} standard deviation vector of the input data.

\code{res$alpha} : \eqn{\alpha} of the std NTS distribution (X).

\code{res$theta} : \eqn{\theta} of the std NTS distribution (X).

\code{res$beta} : \eqn{\beta} vector of the std NTS distribution (X).

\code{res$Rho} : \eqn{\rho} matrix of the std NTS distribution (X),
which is correlation matrix of epsilon.

\code{res$CovMtx} : Covariance matrix of return data \eqn{r}.
}
\description{
\code{fitmnts} fit parameters
of the n-dimensional NTS distribution.

\eqn{r = \mu + diag(\sigma) X}

where

\eqn{X} follows \eqn{stdNTS_n(\alpha, \theta, \beta, \Sigma)}
}
\examples{
library(functional)
library(nloptr)
library(pracma)
library(spatstat)
library(Matrix)
library(quantmod)

getSymbols("^GSPC", src="yahoo", from = "2016-1-1", to = "2020-08-31")
pr1 <- as.numeric(GSPC$GSPC.Adjusted)
getSymbols("^DJI", src="yahoo", from = "2016-1-1", to = "2020-08-31")
pr2 <- as.numeric(DJI$DJI.Adjusted)

returndata <- matrix(data = c(diff(log(pr1)),diff(log(pr2))),
                     ncol = 2, nrow = (length(pr1)-1))
res <- fitmnts( returndata = returndata, n=2 )


#Fix alpha and theta.
#Estimate alpha dna theta from DJIA and use those parameter for IBM, INTC parameter fit.
getSymbols("^DJI", src="yahoo", from = "2020-8-25", to = "2020-08-31")
prDJ <- as.numeric(DJI$DJI.Adjusted)
ret <- diff(log(prDJ))
ntsparam <-  fitnts(ret)
getSymbols("IBM", src="yahoo", from = "2016-1-1", to = "2020-08-31")
pr1 <- as.numeric(IBM$IBM.Adjusted)
getSymbols("INTC", src="yahoo", from = "2016-1-1", to = "2020-08-31")
pr2 <- as.numeric(INTC$INTC.Adjusted)

returndata <- matrix(data = c(diff(log(pr1)),diff(log(pr2))),
                     ncol = 2, nrow = (length(pr1)-1))
res <- fitmnts( returndata = returndata,
                n = 2,
                alphaNtheta = c(ntsparam["alpha"], ntsparam["theta"])  )

}
\references{
Kim, Y. S. (2020) Portfolio Optimization on the Dispersion Risk and the Asymmetric Tail Risk
\url{https://arxiv.org/pdf/2007.13972.pdf}
}
